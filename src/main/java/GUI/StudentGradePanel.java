/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.StudentGradeBLL;
import DAL.StudentGrade;
import java.awt.Color;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.Font;
/**
 *
 * @author Admin
 */
public class StudentGradePanel extends javax.swing.JPanel {
private DefaultTableModel tblstudentgrademodel;
private MainForm parentform;
    /**
     * Creates new form StudentGradePanel
     */
    public StudentGradePanel() {
        initComponents();
        initTable();
        loadDataToTable();
    }
private  void initTable(){
        tblstudentgrademodel = new DefaultTableModel();
        tblstudentgrademodel.setColumnIdentifiers(new String[] {"EnrollmentID  ","CourseID","StudentID","Grade"});
        tbl_studentgrade.setModel(tblstudentgrademodel);
      
  }
  private  void loadDataToTable(){
      try {
            StudentGradeBLL bll = new StudentGradeBLL();
            List<StudentGrade> list = bll.LoadStudentGrade(WIDTH);
            tblstudentgrademodel.setRowCount(0);
            for (StudentGrade it : list) {
                tblstudentgrademodel.addRow(new Object[]{
                    it.getEnrollmentID(),  it.getCourseID(),it.getStudentID(), it.getGrade()
              });
            }
            tblstudentgrademodel.fireTableDataChanged();
        } catch (Exception e) {
        }
      
  }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        txtenrollmentID = new javax.swing.JTextField();
        txtcourseID = new javax.swing.JTextField();
        txtstudentID = new javax.swing.JTextField();
        txtgrade = new javax.swing.JTextField();
        txtfind = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        CourseID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_studentgrade = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnSearch = new com.k33ptoo.components.KButton();
        btnUpdate = new com.k33ptoo.components.KButton();
        btnAdd = new com.k33ptoo.components.KButton();
        btnDelete = new com.k33ptoo.components.KButton();
        btnReset = new com.k33ptoo.components.KButton();
        jLabel5 = new javax.swing.JLabel();

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(99, 65, 180));
        kGradientPanel1.setkStartColor(new java.awt.Color(248, 90, 202));

        txtenrollmentID.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        txtcourseID.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtcourseID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcourseIDActionPerformed(evt);
            }
        });

        txtstudentID.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        txtgrade.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        txtfind.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtfind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfindKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("EnrollmentID:");

        CourseID.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        CourseID.setForeground(new java.awt.Color(255, 255, 255));
        CourseID.setText("CourseID:");

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Grade:");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("StudentID:");

        jScrollPane1.getViewport().setOpaque (false);

        tbl_studentgrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_studentgrade.setBackground(new Color(0,0,0,0));
        ((DefaultTableCellRenderer) tbl_studentgrade.getDefaultRenderer(Object.class)).setBackground (new Color (0,0,0,0));
        tbl_studentgrade.setForeground (Color.WHITE);
        tbl_studentgrade.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_studentgrade.setOpaque (false);
        ((DefaultTableCellRenderer) tbl_studentgrade.getDefaultRenderer (Object.class)).setOpaque (false);
        tbl_studentgrade.setShowGrid (true);
        tbl_studentgrade.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_studentgrade.getTableHeader().setFont (new Font ("Open Sans", Font.BOLD, 14));

        tbl_studentgrade.getTableHeader().setBackground (new Color (255,238,125));
        tbl_studentgrade.getTableHeader().setForeground (new Color (255,255,255));
        tbl_studentgrade.getTableHeader().setOpaque (false);
        tbl_studentgrade.setRowHeight(25);
        tbl_studentgrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_studentgradeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_studentgrade);

        jLabel4.setFont(new java.awt.Font("Krona One", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("STUDENT GRADE");

        btnSearch.setText("SEARCH");
        btnSearch.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnSearch.setkEndColor(new java.awt.Color(68, 45, 124));
        btnSearch.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnSearch.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSearch.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnSearch.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnSearch.setkStartColor(new java.awt.Color(99, 65, 180));
        btnSearch.setkEndColor(new java.awt.Color(68, 45, 124));

        btnSearch.setkHoverEndColor(new java.awt.Color(83, 76, 152));

        btnSearch.setkHoverForeGround(new java.awt.Color(255, 255, 255));

        btnSearch.setkHoverStartColor(new java.awt.Color(183, 103, 255));

        btnSearch.setkPressedColor(new java.awt.Color(255, 238, 125));

        btnSearch.setkStartColor(new java.awt.Color(99, 65, 180));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnUpdate.setkEndColor(new java.awt.Color(68, 45, 124));
        btnUpdate.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnUpdate.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnUpdate.setkStartColor(new java.awt.Color(99, 65, 180));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnAdd.setkEndColor(new java.awt.Color(68, 45, 124));
        btnAdd.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnAdd.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnAdd.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnAdd.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnAdd.setkStartColor(new java.awt.Color(99, 65, 180));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnDelete.setkEndColor(new java.awt.Color(68, 45, 124));
        btnDelete.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnDelete.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDelete.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnDelete.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnDelete.setkStartColor(new java.awt.Color(99, 65, 180));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("RESET");
        btnReset.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnReset.setkEndColor(new java.awt.Color(68, 45, 124));
        btnReset.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnReset.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnReset.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnReset.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnReset.setkStartColor(new java.awt.Color(99, 65, 180));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("EnrollmentID:");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addComponent(CourseID)
                                .addGap(45, 45, 45)))
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtcourseID)
                            .addComponent(txtenrollmentID, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtfind, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtstudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addGap(39, 39, 39)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtenrollmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(txtstudentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CourseID)
                    .addComponent(txtcourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtcourseIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcourseIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcourseIDActionPerformed

    private void txtfindKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfindKeyReleased
        try{
            StudentGradeBLL bll = new StudentGradeBLL();
            List<StudentGrade> list = bll.findStudentGrade(txtfind.getText());

            initTable();
            for(StudentGrade it : list){
                tblstudentgrademodel.addRow(new Object[] {
                    it.getEnrollmentID(),  it.getCourseID(),it.getStudentID(), it.getGrade()});
        }

        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtfindKeyReleased

    private void tbl_studentgradeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_studentgradeMouseClicked
        try {
            int row = tbl_studentgrade.getSelectedRow();
            if(row >= 0){
                int id = (Integer) tbl_studentgrade.getValueAt(row, 0);
                StudentGradeBLL bll = new StudentGradeBLL();
                StudentGrade st = bll.getStudentGrade(id);
                if(st != null) {
                    txtenrollmentID.setText(String.valueOf(st.getEnrollmentID()));
                    txtcourseID.setText(String.valueOf(st.getCourseID()));
                    txtstudentID.setText(String.valueOf(st.getStudentID()));
                    txtgrade.setText(String.valueOf(st.getGrade()));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tbl_studentgradeMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try{
            StudentGradeBLL bll = new StudentGradeBLL();
            List<StudentGrade> list = bll.findStudentGrade((txtfind.getText()));

            if(list.isEmpty()){
                JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }else{
                for(StudentGrade st : list){
                    txtenrollmentID.setText(String.valueOf(st.getEnrollmentID()));
                    txtcourseID.setText(String.valueOf(st.getCourseID()));
                    txtstudentID.setText(String.valueOf(st.getStudentID()));
                    txtgrade.setText(String.valueOf(st.getGrade()));
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(txtenrollmentID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "EnrollmentID không được để trống");
            return;
        }
        if(txtcourseID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "CourseID  không được để trống");
            return;
        }
        if(txtstudentID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "StudentID không được để trống");
            return;
        }

        if(txtgrade.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Grade không được để trống");
            return;
        }
        try{
            StudentGrade st = new StudentGrade();
            st.setEnrollmentID(Integer.parseInt(txtenrollmentID.getText()));
            st.setCourseID(Integer.parseInt(txtcourseID.getText()));
            st.setStudentID(Integer.parseInt(txtstudentID.getText()));
            st.setGrade(Float.parseFloat(txtgrade.getText()));
            StudentGradeBLL bll = new StudentGradeBLL();

            if(bll.insertStudenyGrade(st) >0){
                JOptionPane.showMessageDialog(parentform, "Thêm điểm thành công");
                txtenrollmentID.setText("");
                txtcourseID.setText("");
                txtstudentID.setText("");
                txtgrade.setText("");
                loadDataToTable();
            }else{
                JOptionPane.showMessageDialog(parentform,"Thêm điểm thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Thêm điểm thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       if(txtenrollmentID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "EnrollmentID không được để trống");
            return;
        }
        if(txtcourseID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "CourseID  không được để trống");
            return;
        }
        if(txtstudentID.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "StudentID không được để trống");
            return;
        }

        if(txtgrade.getText().isBlank())
        {
            JOptionPane.showMessageDialog(this, "Grade không được để trống");
            return;
        }
        try{
            StudentGrade st = new StudentGrade();
            st.setEnrollmentID(Integer.parseInt(txtenrollmentID.getText()));
            st.setCourseID(Integer.parseInt(txtcourseID.getText()));
            st.setStudentID(Integer.parseInt(txtstudentID.getText()));
            st.setGrade(Float.parseFloat(txtgrade.getText()));
            StudentGradeBLL bll = new StudentGradeBLL();

            if(bll.updateStudentGrade(st) >0){
                JOptionPane.showMessageDialog(parentform, "Cập nhật thành công");
                txtenrollmentID.setText("");
                txtcourseID.setText("");
                txtstudentID.setText("");
                txtgrade.setText("");
                loadDataToTable();
            }else{
                JOptionPane.showMessageDialog(parentform,"Cập nhật thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Cập nhật thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(JOptionPane.showConfirmDialog(parentform, "Bạn có muốn xóa không?", "Hỏi"
            , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION)
    {
        return;
        }
        try{
            StudentGradeBLL bll = new StudentGradeBLL();

            if(bll.deleteStudentGrade(Integer.parseInt(txtenrollmentID.getText())) ==0){
                txtenrollmentID.setText("");
                txtcourseID.setText("");
                txtstudentID.setText("");
                txtgrade.setText("");
                JOptionPane.showMessageDialog(parentform,"Xóa diểm thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(parentform, "Xóa điểm thành công");
                txtenrollmentID.setText("");
                txtcourseID.setText("");
                txtstudentID.setText("");
                txtgrade.setText("");
                loadDataToTable();
            }

        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtenrollmentID.setText("");
        txtcourseID.setText("");
        txtstudentID.setText("");
        txtgrade.setText("");
        txtfind.setText("");
        loadDataToTable();
    }//GEN-LAST:event_btnResetActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CourseID;
    private com.k33ptoo.components.KButton btnAdd;
    private com.k33ptoo.components.KButton btnDelete;
    private com.k33ptoo.components.KButton btnReset;
    private com.k33ptoo.components.KButton btnSearch;
    private com.k33ptoo.components.KButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JTable tbl_studentgrade;
    private javax.swing.JTextField txtcourseID;
    private javax.swing.JTextField txtenrollmentID;
    private javax.swing.JTextField txtfind;
    private javax.swing.JTextField txtgrade;
    private javax.swing.JTextField txtstudentID;
    // End of variables declaration//GEN-END:variables
}
