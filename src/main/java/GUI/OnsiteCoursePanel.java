/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.CourseBLL;
import BLL.OnsitecourseBLL;
import DAL.Course;
import DAL.OnsiteCourse;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.Time;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class OnsiteCoursePanel extends javax.swing.JPanel {
private DefaultTableModel tblonsitemodel;
private MainForm parentform;
    /**
     * Creates new form OnsiteCoursePanel
     */
    
    public OnsiteCoursePanel() {
        initComponents();
        initTable();
        loadDataToTable();
    }
    private void initTable() {
        tblonsitemodel = new DefaultTableModel();
        tblonsitemodel.setColumnIdentifiers(new String[] {"CourseID  ","Title","Credits","Department name", "Location", "Days  ", "Time"});
        tblonsite.setModel(tblonsitemodel);
    }
    private void loadDataToTable() {
        try {
            OnsitecourseBLL bll = new OnsitecourseBLL();
            List<OnsiteCourse> list = bll.LoadOnsite(WIDTH);
            tblonsitemodel.setRowCount(0);
            for(OnsiteCourse it : list) {
                tblonsitemodel.addRow(new Object[] {
                it.getCourseID(),it.getTitle(),it.getCredits(),it.getDepartmentName(),
                    it.getLocation(), it.getDays(), it.getTime()});
            }
            tblonsitemodel.fireTableDataChanged();
        } catch (Exception e) {
        }
    }
    private boolean checktxtCourseID() throws HeadlessException {
        StringBuilder sb = new StringBuilder();
        if(txtCourseID.getText().equals("")){
            sb.append("Mã khóa học không được để trống");
        }
        if (sb.length() >0) {
            JOptionPane.showMessageDialog(parentform, sb, "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            txtCourseID.setBackground(Color.red);
            return true;
        }
        return false;
    }
    private String getDays(){
        String days = "";
        if(cbM.isSelected()){
            days += cbM.getText();
        }
        if(cbT.isSelected()){
            days += cbT.getText();
        }
        if(cbW.isSelected()){
            days += cbW.getText();
        }
        if(cbH.isSelected()){
            days += cbH.getText();
        }
        if(cbF.isSelected()){
            days += cbF.getText();
        }
        if(cbS.isSelected()){
            days += cbS.getText();
        }
        return days;
    }
    private void CbSelected(String day){
         if(day.equals("M")){
             cbM.setSelected(true);
         }
         if(day.equals("T")){
             cbT.setSelected(true);
         }
         if(day.equals("W")){
             cbW.setSelected(true);
         }
         if(day.equals("H")){
             cbH.setSelected(true);
         }
         if(day.equals("F")){
             cbF.setSelected(true);
         }
         if(day.equals("S")){
             cbS.setSelected(true);
         }
    }
    private void cbSelectreset() {
        cbM.setSelected(false);
        cbT.setSelected(false);
        cbW.setSelected(false);
        cbH.setSelected(false);
        cbF.setSelected(false);
        cbS.setSelected(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblonsite = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCourseTitle = new javax.swing.JTextField();
        txtCredits = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        btnSearch = new com.k33ptoo.components.KButton();
        btnUpdate = new com.k33ptoo.components.KButton();
        btnDelete = new com.k33ptoo.components.KButton();
        btnReset = new com.k33ptoo.components.KButton();
        btnAdd = new com.k33ptoo.components.KButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbM = new javax.swing.JCheckBox();
        cbT = new javax.swing.JCheckBox();
        cbW = new javax.swing.JCheckBox();
        cbH = new javax.swing.JCheckBox();
        cbF = new javax.swing.JCheckBox();
        cbS = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        txtDepName = new javax.swing.JTextField();
        txtCourseID = new javax.swing.JTextField();
        btnshowtbl = new com.k33ptoo.components.KButton();

        kGradientPanel1.setkBorderRadius(0);
        kGradientPanel1.setkEndColor(new java.awt.Color(248, 90, 202));
        kGradientPanel1.setkStartColor(new java.awt.Color(68, 45, 124));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(1070, 930));

        jScrollPane1.getViewport().setOpaque (false);

        tblonsite.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        tblonsite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblonsite.setGridColor(new java.awt.Color(255, 255, 255));
        tblonsite.setBackground(new Color(0,0,0,0));
        ((DefaultTableCellRenderer) tblonsite.getDefaultRenderer(Object.class)).setBackground (new Color (0,0,0,0));
        tblonsite.setForeground (Color.WHITE);
        tblonsite.setGridColor(new java.awt.Color(255, 255, 255));
        tblonsite.setOpaque (false);
        ((DefaultTableCellRenderer) tblonsite.getDefaultRenderer (Object.class)).setOpaque (false);
        tblonsite.setShowGrid (true);

        tblonsite.getTableHeader().setFont (new Font ("Open Sans", Font.BOLD, 14));

        tblonsite.getTableHeader().setBackground (new Color (255,238,125));
        tblonsite.getTableHeader().setForeground (new Color (255,255,255));
        tblonsite.getTableHeader().setOpaque (false);
        tblonsite.setRowHeight(25);
        tblonsite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblonsiteMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblonsiteMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblonsite);

        jLabel1.setFont(new java.awt.Font("Krona One", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ONSITE COURSE");

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CourseID:");

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Course Title:");

        txtSearch.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Department Name:");

        txtCourseTitle.setEditable(false);
        txtCourseTitle.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCourseTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCourseTitleActionPerformed(evt);
            }
        });

        txtCredits.setEditable(false);
        txtCredits.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Credits:");

        jLabel8.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Course Title:");

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Days:");

        txtLocation.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        btnSearch.setText("SEARCH");
        btnSearch.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnSearch.setkEndColor(new java.awt.Color(68, 45, 124));
        btnSearch.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnSearch.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSearch.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnSearch.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnSearch.setkStartColor(new java.awt.Color(99, 65, 180));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnUpdate.setkEndColor(new java.awt.Color(68, 45, 124));
        btnUpdate.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnUpdate.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnUpdate.setkStartColor(new java.awt.Color(99, 65, 180));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnDelete.setkEndColor(new java.awt.Color(68, 45, 124));
        btnDelete.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnDelete.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDelete.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnDelete.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnDelete.setkStartColor(new java.awt.Color(99, 65, 180));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setText("RESET");
        btnReset.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnReset.setkEndColor(new java.awt.Color(68, 45, 124));
        btnReset.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnReset.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnReset.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnReset.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnReset.setkStartColor(new java.awt.Color(99, 65, 180));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnAdd.setText("ADD");
        btnAdd.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnAdd.setkEndColor(new java.awt.Color(68, 45, 124));
        btnAdd.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnAdd.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnAdd.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnAdd.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnAdd.setkStartColor(new java.awt.Color(99, 65, 180));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Location");

        jLabel6.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Time:");

        cbM.setBackground(new java.awt.Color(255, 255, 255));
        cbM.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbM.setForeground(new java.awt.Color(255, 255, 255));
        cbM.setText("Monday");

        cbT.setBackground(new java.awt.Color(255, 255, 255));
        cbT.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbT.setForeground(new java.awt.Color(255, 255, 255));
        cbT.setText("Tuesday");

        cbW.setBackground(new java.awt.Color(255, 255, 255));
        cbW.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbW.setForeground(new java.awt.Color(255, 255, 255));
        cbW.setText("Wednesday");

        cbH.setBackground(new java.awt.Color(255, 255, 255));
        cbH.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbH.setForeground(new java.awt.Color(255, 255, 255));
        cbH.setText("Thursday");

        cbF.setBackground(new java.awt.Color(255, 255, 255));
        cbF.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbF.setForeground(new java.awt.Color(255, 255, 255));
        cbF.setText("Friday");

        cbS.setBackground(new java.awt.Color(255, 255, 255));
        cbS.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        cbS.setForeground(new java.awt.Color(255, 255, 255));
        cbS.setText("Saturday");

        jLabel11.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));

        txtTime.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtTime.setText("HH:mm:ss");

        txtDepName.setEditable(false);
        txtDepName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtDepName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepNameActionPerformed(evt);
            }
        });

        txtCourseID.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtCourseID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCourseIDKeyPressed(evt);
            }
        });

        btnshowtbl.setText("...");
        btnshowtbl.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnshowtbl.setkEndColor(new java.awt.Color(68, 45, 124));
        btnshowtbl.setkHoverEndColor(new java.awt.Color(83, 76, 152));
        btnshowtbl.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnshowtbl.setkHoverStartColor(new java.awt.Color(183, 103, 255));
        btnshowtbl.setkPressedColor(new java.awt.Color(255, 238, 125));
        btnshowtbl.setkStartColor(new java.awt.Color(99, 65, 180));
        btnshowtbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnshowtblActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(jLabel1))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel9))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel10)
                                .addGap(27, 27, 27)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(cbM)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbT)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbW, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbH)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbF)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbS))
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtCredits, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                                                    .addComponent(txtLocation))
                                                .addGap(48, 48, 48)
                                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(36, 36, 36)
                                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)))
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtCourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                                .addGap(58, 58, 58)
                                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11)))
                                            .addComponent(txtTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnshowtbl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 154, Short.MAX_VALUE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(btnshowtbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(52, 52, 52)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel6)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)))
                .addGap(22, 22, 22)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbM)
                    .addComponent(cbT)
                    .addComponent(cbW)
                    .addComponent(cbH)
                    .addComponent(cbF)
                    .addComponent(cbS))
                .addGap(27, 27, 27)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnshowtblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnshowtblActionPerformed
        TableCourse tc = new TableCourse();
        try{
            tc.list();

        }catch (Exception ex) {
            Logger.getLogger(TableCourse.class.getName()).log(Level.SEVERE, null, ex);
        }
        tc.setVisible(true);
    }//GEN-LAST:event_btnshowtblActionPerformed

    private void txtCourseIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCourseIDKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            try{
                CourseBLL bll = new CourseBLL();
                Course oc = bll.getCourse(Integer.parseInt(""+txtCourseID.getText()));
                if(oc.getTitle().isBlank() && oc.getCredits() ==0 && oc.getDepartmentName().isBlank()){
                    JOptionPane.showMessageDialog(parentform, "CourseID không tồn tại");
                }
                txtCourseTitle.setText(""+oc.getTitle());
                txtCredits.setText(""+ oc.getCredits());
                txtDepName.setText(""+ oc.getDepartmentName());
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(parentform, "CourseID không tồn tại");
            }
        }
    }//GEN-LAST:event_txtCourseIDKeyPressed

    private void txtDepNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(checktxtCourseID())return;
        try{
            OnsiteCourse oc = new OnsiteCourse();
            oc.setCourseID(Integer.parseInt(txtCourseID.getText()));
            oc.setLocation(txtLocation.getText());
            String days = getDays();
            oc.setDays(days);
            oc.setTime(Time.valueOf(txtTime.getText()));
            OnsitecourseBLL bll = new OnsitecourseBLL();

            if(bll.addOnsite(oc) >0){
                JOptionPane.showMessageDialog(parentform, "Thêm khóa học thành công");
                txtCourseID.setText("");
                txtCourseTitle.setText("");
                txtCredits.setText("");
                txtDepName.setText("");
                txtLocation.setText("");
                txtTime.setText("");
                cbSelectreset();
                loadDataToTable();
            }else{
                JOptionPane.showMessageDialog(parentform,"Thêm khóa học thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Thêm khóa học thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtCourseID.setText("");
        txtCourseTitle.setText("");
        txtCredits.setText("");
        txtDepName.setText("");
        txtLocation.setText("");
        txtTime.setText("");
        cbSelectreset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(checktxtCourseID())return;
        if(JOptionPane.showConfirmDialog(parentform, "Bạn có muốn xóa không?", "Hỏi"
            , JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.NO_OPTION)
    {
        return;
        }
        try{
            OnsitecourseBLL bll = new OnsitecourseBLL();

            if(bll.deleteOnsite(Integer.parseInt(txtCourseID.getText())) ==0){
                txtCourseID.setText("");
                txtCourseTitle.setText("");
                txtCredits.setText("");
                txtDepName.setText("");
                txtLocation.setText("");
                txtTime.setText("");
                cbSelectreset();
                JOptionPane.showMessageDialog(parentform,"Xóa khóa học thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(parentform, "Xóa khóa học thành công");
                txtCourseID.setText("");
                txtCourseTitle.setText("");
                txtCredits.setText("");
                txtDepName.setText("");
                txtLocation.setText("");
                txtTime.setText("");
                cbSelectreset();
                loadDataToTable();
            }

        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(checktxtCourseID())return;
        try{
            OnsiteCourse oc = new OnsiteCourse();
            oc.setCourseID(Integer.parseInt(txtCourseID.getText()));
            oc.setLocation(txtLocation.getText());
            String days = getDays();
            oc.setDays(days);
            oc.setTime(Time.valueOf(txtTime.getText()));
            OnsitecourseBLL bll = new OnsitecourseBLL();

            if(bll.updateOnsite(oc) >0){
                JOptionPane.showMessageDialog(parentform, "Cập nhật khóa học thành công");
                txtCourseID.setText("");
                txtCourseTitle.setText("");
                txtCredits.setText("");
                txtDepName.setText("");
                txtLocation.setText("");
                txtTime.setText("");
                cbSelectreset();
                loadDataToTable();
            }else{
                JOptionPane.showMessageDialog(parentform,"Cập nhật khóa học thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Cập nhật khóa học thất bại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try{
            OnsitecourseBLL bll = new OnsitecourseBLL();
            List<OnsiteCourse> list = bll.findbyTitle((txtSearch.getText()));

            if(list.isEmpty()){
                JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            }else{
                for(OnsiteCourse oc : list){
                    txtCourseID.setText(String.valueOf(oc.getCourseID()));
                    txtCourseTitle.setText((oc.getTitle()));
                    txtCredits.setText(String.valueOf(oc.getCredits()));
                    txtDepName.setText(oc.getDepartmentName());
                    txtLocation.setText(oc.getLocation());
                    txtTime.setText(String.valueOf(oc.getTime()));
                    String days = oc.getDays();
                    char []days_arr = days.toCharArray();
                    for (int i = 0; i< days.length(); i++){
                        CbSelected(String.valueOf(days_arr[i]));
                    }
                }
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtCourseTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCourseTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCourseTitleActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        try{
            OnsitecourseBLL bll = new OnsitecourseBLL();
            List<OnsiteCourse> list = bll.findbyTitle(txtSearch.getText());
            initTable();
            for(OnsiteCourse it : list){
                tblonsitemodel.addRow(new Object[] {
                    it.getCourseID(),it.getTitle(),it.getCredits(),it.getDepartmentName(),
                    it.getLocation(), it.getDays(), it.getTime()});
        }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform,"Khóa học không tồn tại" , "Cảnh báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblonsiteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblonsiteMouseReleased
        cbSelectreset();
        try {
            int row = tblonsite.getSelectedRow();
            if(row >= 0){
                int id = (Integer) tblonsite.getValueAt(row, 0);
                OnsitecourseBLL bll = new OnsitecourseBLL();
                OnsiteCourse oc = bll.getOnsite(id);
                if(oc != null) {
                    txtCourseID.setText(String.valueOf(oc.getCourseID()));
                    txtCourseTitle.setText(oc.getTitle());
                    txtCredits.setText(String.valueOf(oc.getCredits()));
                    txtDepName.setText(oc.getDepartmentName());
                    txtLocation.setText(oc.getLocation());
                    txtTime.setText(String.valueOf(oc.getTime()));
                    String days = oc.getDays();
                    char []days_arr = days.toCharArray();
                    for (int i = 0; i< days.length(); i++){
                        CbSelected(String.valueOf(days_arr[i]));
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblonsiteMouseReleased

    private void tblonsiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblonsiteMouseClicked
        cbSelectreset();
        try {
            int row = tblonsite.getSelectedRow();
            if(row >= 0){
                int id = (Integer) tblonsite.getValueAt(row, 0);
                OnsitecourseBLL bll = new OnsitecourseBLL();
                OnsiteCourse oc = bll.getOnsite(id);
                if(oc != null) {
                    txtCourseID.setText(String.valueOf(oc.getCourseID()));
                    txtCourseTitle.setText(oc.getTitle());
                    txtCredits.setText(String.valueOf(oc.getCredits()));
                    txtDepName.setText(oc.getDepartmentName());
                    txtLocation.setText(oc.getLocation());
                    txtTime.setText(String.valueOf(oc.getTime()));
                    String days = oc.getDays();
                    char []days_arr = days.toCharArray();
                    for (int i = 0; i< days.length(); i++){
                        CbSelected(String.valueOf(days_arr[i]));
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(parentform, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblonsiteMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton btnAdd;
    private com.k33ptoo.components.KButton btnDelete;
    private com.k33ptoo.components.KButton btnReset;
    private com.k33ptoo.components.KButton btnSearch;
    private com.k33ptoo.components.KButton btnUpdate;
    private com.k33ptoo.components.KButton btnshowtbl;
    private javax.swing.JCheckBox cbF;
    private javax.swing.JCheckBox cbH;
    private javax.swing.JCheckBox cbM;
    private javax.swing.JCheckBox cbS;
    private javax.swing.JCheckBox cbT;
    private javax.swing.JCheckBox cbW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private javax.swing.JTable tblonsite;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtCourseTitle;
    private javax.swing.JTextField txtCredits;
    private javax.swing.JTextField txtDepName;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
